<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>$ kill -1 - Architecture</title><link href="http://lostsummer.github.io/" rel="alternate"></link><link href="http://lostsummer.github.io/feeds/architecture.atom.xml" rel="self"></link><id>http://lostsummer.github.io/</id><updated>2018-04-11T18:15:14+08:00</updated><entry><title>容器平台监控方案大体设计</title><link href="http://lostsummer.github.io/posts/2018/Apr/11/%E5%AE%B9%E5%99%A8%E5%B9%B3%E5%8F%B0%E7%9B%91%E6%8E%A7%E6%96%B9%E6%A1%88%E5%A4%A7%E4%BD%93%E8%AE%BE%E8%AE%A1.html" rel="alternate"></link><published>2018-04-11T18:15:14+08:00</published><updated>2018-04-11T18:15:14+08:00</updated><author><name>lostsummer</name></author><id>tag:lostsummer.github.io,2018-04-11:/posts/2018/Apr/11/容器平台监控方案大体设计.html</id><summary type="html"></summary><content type="html">&lt;h2 id="_1"&gt;&lt;a class="toclink" href="#_1"&gt;监控对象&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;容器集群节点 &lt;/li&gt;
&lt;li&gt;集群上运行的容器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;&lt;a class="toclink" href="#_2"&gt;监控数据类型&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;性能状态图表:&amp;nbsp;各性能指标的不间断连续数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务心跳:&amp;nbsp;定时上报，确认服务活性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;报警:&amp;nbsp;由状态数据经过报警逻辑计算触发（阈值，断流等）的报警信息&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_3"&gt;&lt;a class="toclink" href="#_3"&gt;不同类型数据流向&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;状态:
    集群节点采集器 -&amp;gt; Prometheus -&amp;gt;&amp;nbsp;Grafana&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;心跳:
    被监控容器自身 -&amp;gt; oneAgent -&amp;gt; InfluxDB -&amp;gt;&amp;nbsp;Grafana&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;报警:
    集群节点采集器 -&amp;gt; Prometheus -&amp;gt; AlertManager -&amp;gt; oneAgent -&amp;gt;&amp;nbsp;报警终端&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集群节点采集器包括cAdvisor， node-exporter&amp;nbsp;等容器&lt;/li&gt;
&lt;li&gt;心跳需要特殊编写脚本，对于容器，要在Dockerfile编写时加入，并在启动时启用heartbeat相关参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;&lt;a class="toclink" href="#_4"&gt;架构及部署变化&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;目前测试运行的 Docker Swarm&amp;nbsp;栈将要发生变化，首要目的是处于节约容器集群资源考虑，将Prometheus剥离出集群单独部署。&lt;/p&gt;
&lt;p&gt;&lt;img alt="architecture_changing" src="http://ooyi4zkat.bkt.clouddn.com/容器监控信息采集.png"/&gt;&lt;/p&gt;
&lt;h2 id="_5"&gt;&lt;a class="toclink" href="#_5"&gt;设计任务&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;关键指标的提前整理归类等&lt;/p&gt;
&lt;h2 id="_6"&gt;&lt;a class="toclink" href="#_6"&gt;部署任务&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;解决Prometheus和AlterManager剥离出集群后的服务发现问题（或通过配置中静态配置采集器地址）&lt;/li&gt;
&lt;li&gt;数据采集效率和延迟测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_7"&gt;&lt;a class="toclink" href="#_7"&gt;开发任务&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;容器节点和容器的心跳上报脚本，心跳功能考虑纳入今后容器构建发布的规范。&lt;/li&gt;
&lt;li&gt;AlterManager&amp;nbsp;报错脚本编写。需要了解学习Prometheus技术栈，提取报警通用逻辑，避免随着服务变动频繁增添脚本。&lt;/li&gt;
&lt;li&gt;oneAgent接口研究，修改（如有必需）&lt;/li&gt;
&lt;/ol&gt;</content><category term="Prometheus"></category><category term="Docker"></category></entry><entry><title>移动版行情服务器架构分析</title><link href="http://lostsummer.github.io/posts/2017/Apr/11/%E7%A7%BB%E5%8A%A8%E7%89%88%E8%A1%8C%E6%83%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E6%9E%84%E5%88%86%E6%9E%90.html" rel="alternate"></link><published>2017-04-11T18:30:54+08:00</published><updated>2017-04-11T18:30:54+08:00</updated><author><name>lostsummer</name></author><id>tag:lostsummer.github.io,2017-04-11:/posts/2017/Apr/11/移动版行情服务器架构分析.html</id><summary type="html"></summary><content type="html">&lt;h1 id="_1"&gt;&lt;a class="toclink" href="#_1"&gt;当前移动版架构&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;仅展示移动版行情功能涉及的上下游结构，不涉及交易模块&lt;/p&gt;
&lt;p&gt;Front&amp;nbsp;上游是上证或券商提供的行情数据接口，部分外盘数据可能来自新浪公开的接口&lt;/p&gt;
&lt;p&gt;FSServer 部署在公司，Memcache&amp;nbsp;由公司服务定时远程写入数据&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ooyi4zkat.bkt.clouddn.com/%E8%A1%8C%E6%83%85%E6%9E%B6%E6%9E%84.png"/&gt;&lt;/p&gt;
&lt;h1 id="_2"&gt;&lt;a class="toclink" href="#_2"&gt;主要业务流程&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="_3"&gt;&lt;a class="toclink" href="#_3"&gt;用户登录流程&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;用户登录区分匿名/实名，首次/非首次&lt;/p&gt;
&lt;p&gt;Fee 验证通过后，&lt;span class="caps"&gt;LB&lt;/span&gt; 返回一个相对空闲的 &lt;span class="caps"&gt;DS&lt;/span&gt; &lt;span class="caps"&gt;URL&lt;/span&gt; （实际就是 &lt;span class="caps"&gt;IP&lt;/span&gt;：&lt;span class="caps"&gt;PORT&lt;/span&gt;&amp;nbsp;拼合）返回给客户端&lt;/p&gt;
&lt;p&gt;所有 &lt;span class="caps"&gt;DS&lt;/span&gt; 的&amp;nbsp;服务端口要暴露在公网中&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ooyi4zkat.bkt.clouddn.com/%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%97%B6%E5%BA%8F%E5%9B%BE.png"/&gt;&lt;/p&gt;
&lt;h2 id="_4"&gt;&lt;a class="toclink" href="#_4"&gt;用户信息查询修改流程&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;DS&lt;/span&gt; 转发客户请求给&amp;nbsp;Fee&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://ooyi4zkat.bkt.clouddn.com/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E4%BF%AE%E6%94%B9.png"/&gt;&lt;/p&gt;
&lt;h2 id="_5"&gt;&lt;a class="toclink" href="#_5"&gt;用户行情数据获取&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="http://ooyi4zkat.bkt.clouddn.com/%E7%94%A8%E6%88%B7%E8%A1%8C%E6%83%85%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82.png"/&gt;&lt;/p&gt;
&lt;h1 id="_7"&gt;&lt;a class="toclink" href="#_6"&gt;缺陷分析&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="_8"&gt;&lt;a class="toclink" href="#_7"&gt;共同缺陷&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;功能定义混子不明确&lt;/li&gt;
&lt;li&gt;稳定性差&lt;/li&gt;
&lt;li&gt;接口复杂不明晰且文档缺位&lt;/li&gt;
&lt;li&gt;缺少热备，自动恢复方案&lt;/li&gt;
&lt;li&gt;Debug困难&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_9"&gt;&lt;a class="toclink" href="#_8"&gt;各部分缺陷&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;数据上游 Front&amp;nbsp;没有好的高可用方案&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DM&lt;/span&gt; &lt;span class="caps"&gt;DS&lt;/span&gt; 冗余&lt;ul&gt;
&lt;li&gt;重复的数据下发，驻存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DM&lt;/span&gt; &lt;span class="caps"&gt;DS&lt;/span&gt; 职责不明 (明确的设计是区分计算节点和分发节点)&lt;ul&gt;
&lt;li&gt;有些指标 &lt;span class="caps"&gt;DS&lt;/span&gt;&amp;nbsp;也承担计算任务&lt;/li&gt;
&lt;li&gt;操盘线 &lt;span class="caps"&gt;DS&lt;/span&gt; 引入&amp;nbsp;CalcCPX.o&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;LB&lt;/span&gt; &lt;span class="caps"&gt;DS&lt;/span&gt; 分工不明 （缺少 &lt;span class="caps"&gt;API&lt;/span&gt; 网关）&lt;ul&gt;
&lt;li&gt;用户登录由 &lt;span class="caps"&gt;LB&lt;/span&gt; 转发到&amp;nbsp;Fee&lt;/li&gt;
&lt;li&gt;用户改密等由 &lt;span class="caps"&gt;DS&lt;/span&gt; 转发到&amp;nbsp;Fee&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DM&lt;/span&gt; &lt;span class="caps"&gt;DS&lt;/span&gt; 存储不健壮&lt;ul&gt;
&lt;li&gt;本地文件数据库&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;IO&lt;/span&gt;&amp;nbsp;其实更频繁，内存态占用也大&lt;/li&gt;
&lt;li&gt;Debug&amp;nbsp;不容易&lt;/li&gt;
&lt;li&gt;存储结构更改麻烦&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内存落地文件&lt;ul&gt;
&lt;li&gt;定时任务强杀时容易损坏，出错时需手动删除重启&lt;/li&gt;
&lt;li&gt;Debug&amp;nbsp;不容易&lt;/li&gt;
&lt;li&gt;存储结构更改麻烦&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DM&lt;/span&gt; &lt;span class="caps"&gt;DS&lt;/span&gt; 数据存储布局不合理 &lt;ul&gt;
&lt;li&gt;瀑布分流的结构，上游一个节点出错，下游10处需要手动修改&lt;/li&gt;
&lt;li&gt;应该有中心化，热备方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DS&lt;/span&gt; 接口暴露公网&lt;ul&gt;
&lt;li&gt;伪负载均衡&lt;/li&gt;
&lt;li&gt;登录鉴权可以被绕过&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fee 承担业务多&lt;ul&gt;
&lt;li&gt;登录鉴权&lt;/li&gt;
&lt;li&gt;用户行为&lt;/li&gt;
&lt;li&gt;用户信息查询&lt;/li&gt;
&lt;li&gt;用户信息修改&lt;/li&gt;
&lt;li&gt;特殊活动&lt;/li&gt;
&lt;li&gt;交易信息&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fee 和 &lt;span class="caps"&gt;DB&lt;/span&gt; 的 Redis&amp;nbsp;缓存做的不够好&lt;/li&gt;
&lt;/ol&gt;</content></entry></feed>