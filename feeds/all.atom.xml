<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LOST IN CODE</title><link href="http://lostsummer.github.io/" rel="alternate"></link><link href="http://lostsummer.github.io/feeds/all.atom.xml" rel="self"></link><id>http://lostsummer.github.io/</id><updated>2017-04-28T00:00:00+08:00</updated><entry><title>Markdown Source</title><link href="http://lostsummer.github.io/201704281104.html" rel="alternate"></link><published>2017-04-28T00:00:00+08:00</published><updated>2017-04-28T00:00:00+08:00</updated><author><name>Yushin</name></author><id>tag:lostsummer.github.io,2017-04-28:/201704281104.html</id><summary type="html"></summary><content type="html">&lt;p&gt;使用 markdown 很久了，很喜欢用 markdown 记笔记写 wiki，不仅使文章排版呈现更美观和统一，也使写作过程中的思维更加简洁和条理清晰。&lt;/p&gt;
&lt;p&gt;Google  下 markdown，安利它的文章，教程，工具推荐都不少，不赘述。程序员们喜欢它大概因为用 markdown 语法写作像程序从 source 到 output 的编译过程，控制代码和效果呈现分离。像 Word 这样表面强大功能丰富的“所见即所得”工具，对于程序员来说其实难用，因为它总是自作聪明地替你做些你不需要的事，要把它配置的服帖也是要花一番功夫的。而很多人使用 Word 的方式只管看上去差不多，但连正确的大纲都不能生成，这在强迫症看来真的无法忍受。&lt;/p&gt;
&lt;p&gt;所以我建议所有人都尝试用 markdown 写作，你明确自己对 source 的控制，才更清楚 output 了什么，这可能不仅仅是排版呈现的问题，也是思维重新整理的过程。Markdown 被 github 使用，被 Wordpress 支持。新的开源项目的 README 文件都是 .md 而不再是 .rst 了。Markdown 成功的最重要一点就是简单，把握核心，其他特性可以交给各自得 markdown 方言。&lt;/p&gt;
&lt;p&gt;我用为知笔记，他是几大笔记软件里最早支持 markdown 的，现在有道云笔记的 markdown 功能做的更好，但为知笔记开发源码，可以自己编译 Linux 版，导入导出功能更强大（这个很关键，一处写就，到处部署），所以我不打算换。简书作为在线的 markdown 编辑器也很好用，vim 上我用 vim-markdown 插件。&lt;/p&gt;
&lt;p&gt;程序员界现在最流行的两个静态网页博客生成工具是 Jekyll 和 Hexo，分别是 Ruby 和 NodeJs 做的，都支持从markdown 生成，我用 Pelican，也是支持 markdown 的静态博客生成工具，是 Python 做的。个人 wiki 工具我用  simiki （ http://simiki.org/ ），这个是一个中国程序员用 Python 写的，简单好用。&lt;/p&gt;
&lt;p&gt;微信公众平台不支持 markdown，但是 chrome 有个插件叫 Mardown Here，可以方便的让你在网页编辑器内写 markdown，然后一键排版。&lt;/p&gt;</content><category term="markdown"></category></entry><entry><title>第一篇 github pages 文章</title><link href="http://lostsummer.github.io/201604282215.html" rel="alternate"></link><published>2016-04-28T00:00:00+08:00</published><updated>2016-04-28T00:00:00+08:00</updated><author><name>Yushin</name></author><id>tag:lostsummer.github.io,2016-04-28:/201604282215.html</id><summary type="html"></summary><content type="html">&lt;p&gt;2017-04-26 update:&lt;/p&gt;
&lt;p&gt;今天更新一下这个 blog，发现距离它创建之初已经一年零两天，唏嘘一下。&lt;/p&gt;
&lt;p&gt;把少得可怜的三篇文章整理到 &lt;a href="http://wiki.lostsummer.love/"&gt;wiki&lt;/a&gt; 中，产出太少而时间太快，提醒自己要抓紧学习，重视整理。&lt;/p&gt;
&lt;p&gt;这个 wiki 也使用了一个 Python 生成工具，叫 &lt;a href="http://simiki.org/"&gt;simiki&lt;/a&gt;，是中国程序员 &lt;a href="https://github.com/tankywoo"&gt;tankywoo&lt;/a&gt; 写的，谢谢他，也希望能友更多的人用，我很喜欢它的简单。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;想利用 github blog 做一些技术知识的学习整理，一些技术文档的翻译等。关于用 github 写博客的好处，大家可以搜搜阮一峰的文章《搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门》&lt;/p&gt;
&lt;p&gt;本博客搭建选用 pelican，因为我习惯用 Python。所以除了感谢 pelican 的作者以及 pelican 众多插件和主题的作者之外，还感谢以下两篇博文的作者，我是参照他们的教程搭好博客的：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.xycoding.com/articles/2013/11/21/blog-create/"&gt;xycoding: 使用Pelican和GitHub Pages搭建个人博客 —— 基础篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://x-wei.github.io/pelican_github_blog.html"&gt;mx: 用pelican在github上创建自己的博客!&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Git"></category></entry></feed>