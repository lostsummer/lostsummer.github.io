<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>lostsummer.love</title><link href="http://lostsummer.github.io/" rel="alternate"></link><link href="http://lostsummer.github.io/feeds/tech.atom.xml" rel="self"></link><id>http://lostsummer.github.io/</id><updated>2016-07-12T00:00:00+08:00</updated><entry><title>使用 CollectD + InfluxDB + Grafana 监控主机</title><link href="http://lostsummer.github.io/201607121555.html" rel="alternate"></link><published>2016-07-12T00:00:00+08:00</published><author><name>Yushin</name></author><id>tag:lostsummer.github.io,2016-07-12:201607121555.html</id><summary type="html">&lt;p&gt;原文： &lt;a href="http://jansipke.nl/monitoring-hosts-with-collectd-influxdb-and-grafana/" title="原文地址"&gt;Monitoring hosts with CollectD, InfluxDB and Grafana&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本篇文章将介绍一种监控主机的解决方案 —— 在 CentOS 7 系统上搭建 CollectD, InfluxDB 和 Grafana 的组合。&lt;/p&gt;
&lt;h2&gt;1. 安装配置 CollectD&lt;/h2&gt;
&lt;p&gt;使用 yum 安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; yum -y install epel-release
 yum -y install collectd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;本篇写作之时，以上命令会在系统上安装 CollectD 5.5.0 版本，如果你使用老版本的 CentOS 系统，请确认安装的 Collectd 版本不是 4 及 4 以下版本。&lt;/p&gt;
&lt;p&gt;配置文件 /etc/collectd.conf (debian 8 上是 /etc/collectd/collectd.conf) 应配置以下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FQDNLookup  true
BaseDir     &amp;quot;/var/lib/collectd&amp;quot;
PIDFile     &amp;quot;/var/run/collectd.pid&amp;quot;
PluginDir   &amp;quot;/usr/lib64/collectd&amp;quot;
TypesDB     &amp;quot;/usr/share/collectd/types.db&amp;quot;
LoadPlugin  syslog
LoadPlugin  interface
LoadPlugin  load
LoadPlugin  network
&lt;span class="nt"&gt;&amp;lt;Plugin&lt;/span&gt; &lt;span class="err"&gt;interface&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Interface &amp;quot;eth0&amp;quot;
IgnoreSelected false
&lt;span class="nt"&gt;&amp;lt;/Plugin&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Plugin&lt;/span&gt; &lt;span class="err"&gt;load&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ReportRelative true
&lt;span class="nt"&gt;&amp;lt;/Plugin&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Plugin&lt;/span&gt; &lt;span class="err"&gt;network&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Server &amp;quot;127.0.0.1&amp;quot; &amp;quot;25826&amp;quot;
&lt;span class="nt"&gt;&amp;lt;/Plugin&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最关键的是 “network” plugin，这部分设定监控信息将要发送到 127.0.0.1 的 25826 端口。稍后我们将要指定 InfluxDB 监听此端口以接收 CollectD 的发包。&lt;/p&gt;
&lt;p&gt;现在启动这个守护程序，并且将它加入到开机自启动中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start collectd.service
systemctl enable collectd.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2. 安装配置 InfluxDB&lt;/h2&gt;
&lt;p&gt;可以这样安装 InfluxDB&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum -y install http://influxdb.s3.amazonaws.com/influxdb-0.9.4.2-1.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编辑 InfluxDB 的配置文件 /etc/opt/influxdb.conf，将 [collectd] 标签下的内容修改为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[collectd]&lt;/span&gt;
    &lt;span class="na"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="s"&gt;    bind-address = &amp;quot;127.0.0.1:25826&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;    database = &amp;quot;collectd&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;    typesdb = &amp;quot;/usr/share/collectd/types.db&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动守护程序 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start influxdb.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你可以验证下 InfluxDB 是否已经收到了 CollectD 发送的监控信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# /opt/influxdb/influx
Connected to http://localhost:8086 version 0.9.4.2
InfluxDB shell 0.9.4.2
&amp;gt; use collectd
Using database collectd
&amp;gt; show measurements
name: measurements
------------------
name
interface_rx
interface_tx
load_longterm
load_midterm
load_shortterm
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;3. 安装使用 Grafana&lt;/h2&gt;
&lt;p&gt;安装和启动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum -y install https://grafanarel.s3.amazonaws.com/builds/grafana-2.5.0-1.x86_64.rpm
systemctl start grafana-server.service
systemctl enable grafana-server.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打开浏览器： http://localhost:3000 使用用户名/密码 admin/admin 登录后看到页面&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf1" src="http://jansipke.nl/wp-content/uploads/grafana1.png" /&gt;&lt;/p&gt;
&lt;p&gt;点击 Data Source 然后 Add new，填写如下配置项&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf2" src="http://jansipke.nl/wp-content/uploads/grafana2.png" /&gt;&lt;/p&gt;
&lt;p&gt;InfluxDB 默认的用户名和密码都是 root，测试下连接 (Test the connection) 然后保存 (save)&lt;/p&gt;
&lt;p&gt;点击右上角图标，选择 Dashboards / New， &lt;/p&gt;
&lt;p&gt;New Dashboard 右边掩藏一个绿色小矩形， 鼠标移动上去，点击， 选择 Add Panel / Graph&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf3" src="http://jansipke.nl/wp-content/uploads/grafana4.png" /&gt;&lt;/p&gt;
&lt;p&gt;点击 Graph 的标题， 选择点击 Edit， 选择 collectd 作为数据源 (data source)&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf4" src="http://jansipke.nl/wp-content/uploads/grafana5.png" /&gt;&lt;/p&gt;
&lt;p&gt;编辑窗口里你可以改变 graph 的外观和数据。General 标签下，把标题改为 Load。在 Metrics 标签下，点击 "selecct measurements" 选择 "load_longterm"。 
点击 "WHERE" 后的 "+"，选择 "host"，点击随后出现的 "select tag value"，选择你想要检测的主机名。最后把  "ALIAS BY" 的值改为 "Long" ：&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf5" src="http://jansipke.nl/wp-content/uploads/grafana6.png" /&gt;&lt;/p&gt;
&lt;p&gt;点击 " + Query"  添加 mid term 和 short term load 的值。最后点击屏幕顶部的 save 按钮。graph 将呈现像下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf6" src="http://jansipke.nl/wp-content/uploads/grafana7.png" /&gt;&lt;/p&gt;
&lt;p&gt;我们再添加一个新的 graph 来显示网络速率。点击 "ADD ROW"，然后再次从绿色小矩形上选择 Add Panel / Graph。选择 collectd datasource. 这次我们不使用可视化查询编辑器。interface_rx 和 interface_tx 的统计数据是流经网络接口的总包数或总字节数，但我们需要的是速率，也就是单位时间的字节数。选择右边的三条水平线样式的按钮，选择 "Switch editor mode"：&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf7" src="http://jansipke.nl/wp-content/uploads/grafana8.png" /&gt;&lt;/p&gt;
&lt;p&gt;输入框内填入如下查询语句：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT derivative(&amp;quot;value&amp;quot;) AS &amp;quot;value&amp;quot; FROM &amp;quot;interface_rx&amp;quot; WHERE &amp;quot;host&amp;quot; = &amp;#39;test&amp;#39; AND &amp;quot;type&amp;quot; = &amp;#39;if_octets&amp;#39; AND &amp;quot;instance&amp;quot; = &amp;#39;eth0&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;test  是你的主机名，确保替换正确，确保单引号和双引号输入正确。在 "Axes &amp;amp; Grid tab" 标签下，修改 Y 轴 ( Left Y ) 单位  ( unit ) 为 "bytes per second"：&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf8" src="http://jansipke.nl/wp-content/uploads/grafana9.png" /&gt;&lt;/p&gt;
&lt;p&gt;点击 "+ Query" 添加 interface_tx 的查询，方法同上。为两个查询添加别名 ( Alias )： interface_rx : Received (接收), interface_tx : Transmitted (输送)。 graph 将变成类似下面的样子：&lt;/p&gt;
&lt;p&gt;&lt;img alt="gf9" src="http://jansipke.nl/wp-content/uploads/grafana10.png" /&gt;&lt;/p&gt;</summary><category term="InfluxDB"></category><category term="Grafana"></category><category term="CollectD"></category></entry><entry><title>第一篇 github pages 文章</title><link href="http://lostsummer.github.io/201604282215.html" rel="alternate"></link><published>2016-04-28T00:00:00+08:00</published><author><name>Yushin</name></author><id>tag:lostsummer.github.io,2016-04-28:201604282215.html</id><summary type="html">&lt;p&gt;想利用 github blog 做一些技术知识的学习整理，一些技术文档的翻译等。关于用 github 写博客的好处，大家可以搜搜阮一峰的文章《搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门》&lt;/p&gt;
&lt;p&gt;本博客搭建选用 pelican，因为我习惯用 Python。所以除了感谢 pelican 的作者以及 pelican 众多插件和主题的作者之外，还感谢以下两篇博文的作者，我是参照他们的教程搭好博客的：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.xycoding.com/articles/2013/11/21/blog-create/"&gt;xycoding: 使用Pelican和GitHub Pages搭建个人博客 —— 基础篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://x-wei.github.io/pelican_github_blog.html"&gt;mx: 用pelican在github上创建自己的博客!&lt;/a&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Git"></category></entry></feed>